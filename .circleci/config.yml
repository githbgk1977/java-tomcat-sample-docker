version: 2.1

executors:
  test-executor:
    docker:
      - image: circleci/openjdk:11  # Use OpenJDK  image with Maven

jobs:
  build_and_push:
    executor: test-executor
    environment:
      DOCKER_IMAGE: ${DOCKER_IMAGE}                              # Name of the Docker image
      DOCKER_REPO: ${DOCKER_REPO}                                # Repository name in JFrog
      DOCKER_TAG: ${CIRCLE_BUILD_NUM}                            # Tag based on CircleCI build number
      JFROG_BASE_URL: ${JFROG_BASE_URL}                         # JFrog base URL
      JFROG_USERNAME: ${JFROG_USERNAME}                          # JFrog username
      JFROG_API_TOKEN: ${JFROG_API_TOKEN}                       # Your actual API token
      CIRCLE_BUILD_NUM: ${CIRCLE_BUILD_NUM}                     # Automatically provided by CircleCI
    steps:
      - checkout

      - run:
          name: Check Docker Version and Install if Necessary
          command: |
            echo "Checking Docker version..."
            DOCKER_VERSION=$(docker --version | grep -oP '\d+\.\d+\.\d+')
            MIN_DOCKER_VERSION="19.03.15"
            IFS='.' read -r -a CURRENT_VERSION <<< "$DOCKER_VERSION"
            IFS='.' read -r -a REQUIRED_VERSION <<< "$MIN_DOCKER_VERSION"

            if [[ "${CURRENT_VERSION[0]}" -lt "${REQUIRED_VERSION[0]}" ]] || 
               [[ "${CURRENT_VERSION[0]}" -eq "${REQUIRED_VERSION[0]}" && "${CURRENT_VERSION[1]}" -lt "${REQUIRED_VERSION[1]}" ]] || 
               [[ "${CURRENT_VERSION[0]}" -eq "${REQUIRED_VERSION[0]}" && "${CURRENT_VERSION[1]}" -eq "${REQUIRED_VERSION[1]}" && "${CURRENT_VERSION[2]}" -lt "${REQUIRED_VERSION[2]}" ]]; then
              echo "Docker version is below ${MIN_DOCKER_VERSION}. Updating Docker..."
              
              # Get the Ubuntu version codename
              UBUNTU_VERSION=$(lsb_release -c | awk '{print $2}')
              echo "Detected Ubuntu version: $UBUNTU_VERSION"

              # Update the package list and install the required Docker version
              sudo apt-get update
              sudo apt-get install -y docker.io=5:19.03.15~3-0~$UBUNTU_VERSION
            else
              echo "Docker version is sufficient: $DOCKER_VERSION"
            fi

      - run:
          name: Check OpenJDK Installation
          command: |
            echo "Checking OpenJDK installation..."
            if ! command -v java &> /dev/null; then
                echo "OpenJDK is not installed. Please install it."
            else
                echo "OpenJDK is already installed."
                java -version
            fi

      - run:
          name: Check Maven Installation
          command: |
            echo "Checking Maven installation..."
            if ! command -v mvn &> /dev/null; then
                echo "Maven is not installed. Please install it."
            else
                echo "Maven is already installed."
                mvn -v
            fi

      - run:
          name: Check Git Installation
          command: |
            echo "Checking Git installation..."
            if ! command -v git &> /dev/null; then
                echo "Git is not installed. Installing Git..."
                sudo apt-get update
                sudo apt-get install -y git
            else
                echo "Git is already installed."
                git --version
            fi

      - run:
          name: Login to JFrog Artifactory
          command: |
            echo "Logging into JFrog Artifactory..."
            echo "${JFROG_API_TOKEN}" | docker login -u "${JFROG_USERNAME}" --password-stdin demojfrog1.jfrog.io

      - run:
          name: Build the Maven Project
          command: mvn clean package  # Adjust based on your actual build command

      - run:
          name: Tag Docker Image
          command: |
            echo "Tagging Docker image..."
            docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${JFROG_BASE_URL}/${DOCKER_REPO}/${DOCKER_IMAGE}:${DOCKER_TAG}

      - run:
          name: Push Docker Image to JFrog
          command: |
            echo "Pushing Docker image to JFrog Artifactory..."
            docker push ${JFROG_BASE_URL}/${DOCKER_REPO}/${DOCKER_IMAGE}:${DOCKER_TAG}

workflows:
  version: 2
  build_and_push_workflow:
    jobs:
      - build_and_push
