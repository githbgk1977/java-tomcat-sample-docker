version: 2.1

executors:
  test-executor:
    docker:
      - image: cimg/openjdk:17.0  # Use OpenJDK  image with  Maven

jobs:
  build_and_push:
    executor: test-executor
    environment:
      DOCKER_IMAGE: ${DOCKER_IMAGE}                              # Name of the Docker image
      DOCKER_REPO: ${DOCKER_REPO}                                # Repository name in JFrog
      DOCKER_TAG: ${CIRCLE_BUILD_NUM}                            # Tag based on CircleCI build number
      JFROG_BASE_URL: ${JFROG_BASE_URL}                         # JFrog base URL
      JFROG_USERNAME: ${JFROG_USERNAME}                          # JFrog username
      JFROG_API_TOKEN: ${JFROG_API_TOKEN}                       # Your actual API token
      CIRCLE_BUILD_NUM: ${CIRCLE_BUILD_NUM}                     # Automatically provided by CircleCI
    steps:
      - checkout

      - run:
          name: Install Latest Docker Version
          command: |
            echo "Updating package list..."
            sudo apt-get update

            # Install prerequisites
            echo "Installing prerequisites..."
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

            # Add Docker's official GPG key
            curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -

            # Set up the stable repository for Debian
            echo "Setting up the Docker repository..."
            echo "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list

            # Update the package index
            echo "Updating package index..."
            sudo apt-get update

            # Install the latest version of Docker
            echo "Installing the latest version of Docker..."
            sudo apt-get install -y docker-ce

            # Verify installation
            echo "Verifying Docker installation..."
            docker --version

      - run:
          name: Check OpenJDK Installation
          command: |
            echo "Checking OpenJDK installation..."
            if ! command -v java &> /dev/null; then
                echo "OpenJDK is not installed. Please install it."
            else
                echo "OpenJDK is already installed."
                java -version
            fi

      - run:
          name: Check Maven Installation
          command: |
            echo "Checking Maven installation..."
            if ! command -v mvn &> /dev/null; then
                echo "Maven is not installed. Please install it."
            else
                echo "Maven is already installed."
                mvn -v
            fi

      - run:
          name: Check Git Installation
          command: |
            echo "Checking Git installation..."
            if ! command -v git &> /dev/null; then
                echo "Git is not installed. Installing Git..."
                sudo apt-get update
                sudo apt-get install -y git
            else
                echo "Git is already installed."
                git --version
            fi

      #- run:
      #    name: Login to JFrog Artifactory
      #    command: |
      #      echo "Logging into JFrog Artifactory..."
      #      echo "${JFROG_API_TOKEN}"
      #      #docker login -u "${JFROG_USERNAME}" --password-stdin "${JFROG_API_TOKEN}" demojfrog1.jfrog.io
      #      echo "${JFROG_API_TOKEN}" | docker login -ugithubgk@gmail.com --password-stdin demojfrog1.jfrog.io
            
      - run:
          name: Build the Maven Project
          command: mvn clean package  # Adjust based on your actual build command

      - run:
          name: Tag Docker Image
          command: |
            echo "Tagging Docker image..."
            docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${JFROG_BASE_URL}/${DOCKER_REPO}/${DOCKER_IMAGE}:${DOCKER_TAG}

      - run:
          name: Push Docker Image to JFrog
          command: |
            echo "Pushing Docker image to JFrog Artifactory..."
            docker push ${JFROG_BASE_URL}/${DOCKER_REPO}/${DOCKER_IMAGE}:${DOCKER_TAG}

workflows:
  version: 2
  build_and_push_workflow:
    jobs:
      - build_and_push
