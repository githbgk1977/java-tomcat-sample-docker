version: 2.1

executors:
  test-executor:
    docker:
      - image: cimg/openjdk:15.0  # Use OpenJDK 15 image

jobs:
  build_and_push:
    executor: test-executor
    steps:
      - checkout

      - run:
          name: Install Docker
          command: |
            echo "Updating package list..."
            sudo apt-get update

            # Install Docker prerequisites
            echo "Installing Docker prerequisites..."
            sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release

            # Add Docker's official GPG key
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

            # Set up the stable repository for Docker
            echo "Setting up Docker repository..."
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
              $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            # Update the package index
            echo "Updating package index..."
            sudo apt-get update

            # Install Docker
            echo "Installing Docker..."
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io

            # Verify Docker installation
            echo "Verifying Docker installation..."
            docker --version

            # Start Docker service if not running
            sudo systemctl start docker || echo "Docker is already running."

      - run:
          name: Validate Docker Daemon
          command: |
            # Check if Docker is using Unix socket or TCP
            echo "Validating Docker Daemon connection..."

            # Check the Docker daemon configuration
            if [ -S /var/run/docker.sock ]; then
              echo "Docker is using Unix socket."
            else
              echo "Docker is NOT using Unix socket. Checking if TCP socket is enabled..."
              if curl --unix-socket /var/run/docker.sock http://localhost/_ping 2>/dev/null; then
                echo "Docker daemon is reachable via Unix socket."
              else
                echo "Docker daemon is not reachable. Please check Docker installation or socket configuration."
                exit 1
              fi
            fi

            echo "Docker validation completed successfully."

      - run:
          name: Build Docker Image
          command: |
            echo "Building Docker image..."
            DOCKER_IMAGE="tomcat:8.0"  # Hardcoded Tomcat base image
            IMAGE_NAME="java-tomcat-sample" # Name of the image you want to tag
            DOCKER_TAG="latest"          # Tag for the image
            IMAGE_TAG="${IMAGE_NAME}:${DOCKER_TAG}"  # Tag for the local image
            echo "Final Docker image tag: ${IMAGE_TAG}"

            # Build the Docker image using the Dockerfile
            docker build -t "${IMAGE_TAG}" .

      - run:
          name: List Docker Images
          command: |
            echo "Listing Docker images to verify build..."
            docker images

      # Uncomment below if you wish to push the image to JFrog
      # - run:
      #     name: Push Docker Image to JFrog
      #     command: |
      #       echo "Pushing Docker image to JFrog Artifactory..."
      #       echo "Logging into JFrog..."
      #       echo "${JFROG_API_TOKEN}" | docker login ${JFROG_BASE_URL} -u "${JFROG_USERNAME}" --password-stdin
      #
      #       docker push "${IMAGE_TAG}"

workflows:
  version: 2
  build_and_push_workflow:
    jobs:
      - build_and_push
