version: 2.1

executors:
  test-executor:
    docker:
      - image: genepattern/docker-openjdk_11  # Use Docker image with OpenJDK 11

jobs:
  build_and_push:
    executor: test-executor
    steps:
      - checkout

      - run:
          name: Validate Docker, Maven, and OpenJDK
          command: |
            # Check Docker installation
            if command -v docker &> /dev/null; then
              echo "Docker is already installed. Skipping installation..."
              docker --version
            else
              echo "Docker is not installed. Installing Docker..."
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            fi

            # Check Maven installation
            if command -v mvn &> /dev/null; then
              echo "Maven is installed."
              mvn -version
            else
              echo "Maven is not installed. Installing Maven..."
              sudo apt-get install -y maven
            fi

            # Check OpenJDK installation
            if java -version &> /dev/null; then
              echo "OpenJDK is installed."
              java -version
            else
              echo "OpenJDK is not installed. Please check your base image."
              exit 1
            fi

      - run:
          name: Validate Docker Daemon
          command: |
            # Check if Docker is using Unix socket or TCP
            echo "Validating Docker Daemon connection..."

            # Check if Docker is running
            if ! sudo systemctl is-active --quiet docker; then
              echo "Docker is not running. Attempting to start Docker..."
              sudo systemctl start docker || echo "Docker is already running."
            fi

            # Check if Docker is using Unix socket or TCP
            if [ -S /var/run/docker.sock ]; then
              echo "Docker is using Unix socket."
            else
              echo "Docker is NOT using Unix socket. Checking if TCP socket is enabled..."
              if curl --unix-socket /var/run/docker.sock http://localhost/_ping 2>/dev/null; then
                echo "Docker daemon is reachable via Unix socket."
              else
                echo "Docker daemon is not reachable. Please check Docker installation or socket configuration."
                exit 1
              fi
            fi

            # Display Docker version
            docker --version

      - run:
          name: Build Docker Image
          command: |
            echo "Building Docker image..."
            DOCKER_IMAGE="tomcat:8.0"  # Hardcoded Tomcat base image
            IMAGE_NAME="java-tomcat-sample" # Name of the image you want to tag
            DOCKER_TAG="latest"          # Tag for the image
            IMAGE_TAG="${IMAGE_NAME}:${DOCKER_TAG}"  # Tag for the local image
            echo "Final Docker image tag: ${IMAGE_TAG}"

            # Build the Docker image using the Dockerfile
            docker build -t "${IMAGE_TAG}" .

      - run:
          name: List Docker Images
          command: |
            echo "Listing Docker images to verify build..."
            docker images

      # Uncomment below if you wish to push the image to JFrog
      # - run:
      #     name: Push Docker Image to JFrog
      #     command: |
      #       echo "Pushing Docker image to JFrog Artifactory..."
      #       echo "Logging into JFrog..."
      #       echo "${JFROG_API_TOKEN}" | docker login ${JFROG_BASE_URL} -u "${JFROG_USERNAME}" --password-stdin
      #
      #       docker push "${IMAGE_TAG}"

workflows:
  version: 2
  build_and_push_workflow:
    jobs:
      - build_and_push
