version: 2.1

executors:
  custom-executor:
    docker:
      - image: cimg/openjdk:17.0  # Using CircleCI's OpenJDK 17 image for flexibility
        environment:
          DOCKER_HOST: tcp://docker:2375  # Pointing to Docker service

jobs:
  build_and_push:
    executor: custom-executor
    environment:
      DOCKER_IMAGE: tomcat:8.0                                        # Name of the Docker image
      DOCKER_REPO: ${DOCKER_REPO}                                     # Repository name in JFrog
      DOCKER_TAG: ${CIRCLE_BUILD_NUM}                                 # Tag based on CircleCI build number
      JFROG_BASE_URL: ${JFROG_BASE_URL}                               # JFrog base URL
      JFROG_USERNAME: ${JFROG_USERNAME}                               # JFrog username
      JFROG_API_TOKEN: ${JFROG_API_TOKEN}                             # Your actual API token
      CIRCLE_BUILD_NUM: ${CIRCLE_BUILD_NUM}                           # Automatically provided by CircleCI

    steps:
      - checkout

      - run:
          name: Build the Maven Project
          command: mvn clean package  # Adjust based on your actual build command

      - run:
          name: Build Docker Image
          command: docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .

      - run:
          name: Tag Docker Image
          command: |
            echo "Tagging Docker image..."
            docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${JFROG_BASE_URL}/${DOCKER_REPO}/${DOCKER_IMAGE}:${DOCKER_TAG}

      - run:
          name: Push Docker Image to JFrog
          command: |
            echo "Pushing Docker image to JFrog Artifactory..."
            docker push ${JFROG_BASE_URL}/${DOCKER_REPO}/${DOCKER_IMAGE}:${DOCKER_TAG}

      # Uncomment and add this step after the build and push steps are successful
      # - run:
      #     name: Install Snyk
      #     command: |
      #       echo "Installing Snyk..."
      #       sudo apt-get update && sudo apt-get install -y npm
      #       npm install -g snyk

workflows:
  version: 2
  build_and_push_workflow:
    jobs:
      - build_and_push
